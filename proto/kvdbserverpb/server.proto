syntax = "proto3";

package kvdbserverapi;

message GetServerInfoRequest {}

message GetServerInfoResponse {
    // Information about the server.
    ServerInfo data = 1;
}

// ServerInfo represents information about the server.
message ServerInfo {
    // Version of kvdb.
    string kvdb_version = 1;
    // Version of go used to compile the server.
    string go_version = 2;
    // Number of databases.
    uint32 db_count = 3;
    // Total amount of stored data in bytes.
    uint64 total_data_size = 4;
    // Server operating system.
    string os = 5;
    // Architecture which can be 32 or 64 bits.
    string arch = 6;
    // PID of the server process.
    uint32 process_id = 7;
    // Server process uptime in seconds.
    uint64 uptime_seconds = 8;
    // Server TCP/IP port.
    uint32 tcp_port = 9;
    // True if TLS is enabled.
    bool tls_enabled = 10;
    // True if password protection is enabled.
    bool password_enabled = 11;
    // True if the log file is enabled.
    bool logfile_enabled = 12;
    // True if debug mode is enabled.
    bool debug_enabled = 13;
    // The default database that the server uses.
    string default_db = 14;
    // Allocated memory.
    uint64 memory_alloc = 15;
    // Total allocated memory.
    uint64 memory_total_alloc = 16;
    // Memory obtained from OS.
    uint64 memory_sys = 17;
}

// This will have fields in the future to do filtering.
// For example to return only the latest 10 logs.
message GetLogsRequest {
    
}

message GetLogsResponse {
    // List of returned logs.
    repeated string logs = 1;
    // True if the log file is enabled. Otherwise false.
    bool logfile_enabled = 2;
}

// ServerService provides server-related operations.
//
// Common gRPC metadata for this service's RPCs:
// - password: The server password if the server is password protected.
service ServerService {
    // GetServerInfo returns information about the server.
    rpc GetServerInfo (GetServerInfoRequest) returns (GetServerInfoResponse) {}

    // GetLogs returns the server logs if the log file is enabled.
    rpc GetLogs (GetLogsRequest) returns (GetLogsResponse) {}
}